q3.GD <- read.csv(file = "./data/q3_GD.csv",allowEscapes = TRUE)
View(q3.GD)
View(q3.GD)
q3.GD <- read.csv(file = "./data/q3_GD.csv",skip=3,allowEscapes = TRUE)
View(q3.GD)
q3.GD <- read.csv(file = "./data/q3_GD.csv",skip=3,skipNul = TRUE)
View(q3.GD)
q3.GD <- read.csv(file = "./data/q3_GD.csv",skip=3,strip.white = TRUE)
View(q3.GD)
q3.GD <- read.csv(file = "./data/q3_GD.csv",skip=3,nrows = 232)
View(q3.GD)
q3.GD <- read.csv(file = "./data/q3_GD.csv",skip=3,nrows = 232,na.strings="..")
View(q3.GD)
names(q3.GD)[1] <- "Country"
View(q3.GD)
q3.GD <- q3.GD[,c("country","Ranking","Economy","US.dollars.")]
View(q3.GD)
q3.GD <- q3.GD[,c("Country","Ranking","Economy","US.dollars.")]
q3.edu <- read.csv(file="./data/q3_edu.csv")
View(q3.edu)
q3.GD <- read.csv(file = "./data/q3_GD.csv",skip=4,nrows = 232,na.strings="..")
View(q3.GD)
View(q3.GD)
download.file(url,destfile = "./data/q3_GDP.csv")
View(q3.GD)
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=4,nrows = 232,na.strings="..")
rm(q3.GD)
View(q3.GDP)
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=4,nrows = 231,na.strings="..")
library(plyr)
q3.GDP <- filter(q3.GDP,!is.na(Country))
names(q3.GD)[1] <- "Country"
names(q3.GDP)[1] <- "Country"
q3.GDP <- q3.GDP[,c("Country","Ranking","Economy","US.dollars.")]
View(q3.GDP)
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=3,nrows = 231,na.strings="..")
names(q3.GDP)[1] <- "Country"
q3.GDP <- q3.GDP[,c("Country","Ranking","Economy","US.dollars.")]
q3.GDP <- filter(q3.GDP,!is.na(Country))
View(q3.GDP)
q3.GDP <- filter(q3.GDP,!is.na("Country"))
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=3,nrows = 231,na.strings="..")
names(q3.GDP)[1] <- "Country"
q3.GDP <- q3.GDP[,c("Country","Ranking","Economy","US.dollars.")]
q3.GDP <- q3.GDP[!is.na(q3.GDP$Country),]
View(q3.GDP)
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=3,nrows = 231,na.strings=c(" ",".."))
names(q3.GDP)[1] <- "Country"
q3.GDP <- q3.GDP[,c("Country","Ranking","Economy","US.dollars.")]
View(q3.GDP)
q3.GDP <- q3.GDP[!is.na(q3.GDP$Country),]
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=3,nrows = 231,na.strings=c("",".."))
names(q3.GDP)[1] <- "Country"
q3.GDP <- q3.GDP[,c("Country","Ranking","Economy","US.dollars.")]
q3.GDP <- q3.GDP[!is.na(q3.GDP$Country),]
View(q3.GDP)
q3.GDP <- read.csv(file = "./data/q3_GDP.csv",skip=3,na.strings=c("",".."))
names(q3.GDP)[1] <- "Country"
q3.GDP <- q3.GDP[,c("Country","Ranking","Economy","US.dollars.")]
q3.GDP <- q3.GDP[!is.na(q3.GDP$Country),]
View(q3.GDP)
View(q3.edu)
View(q3.edu)
q3 <- merge(q3.edu,q3.GDP,by.x="CountryCode",by.y = "Country")
q3 <- merge(q3.edu,q3.GDP,by.x="CountryCode",by.y = "Country",all = TRUE)
View(q3)
arrange(q3,desc(CountryCode))
q3 <- arrange(q3,desc(CountryCode))
View(q3)
View(q3)
q3 <- arrange(q3,desc(Ranking))
View(q3)
q3.GDP <- q3.GDP[!is.na(q3.GDP$Ranking),]
q3.edu <- read.csv(file="./data/q3_edu.csv")
q3 <- merge(q3.edu,q3.GDP,by.x="CountryCode",by.y = "Country",all = TRUE)
q3 <- arrange(q3,desc(Ranking))
View(q3)
q3 <- merge(q3.edu,q3.GDP,by.x="CountryCode",by.y = "Country")
q3 <- arrange(q3,desc(Ranking))
View(q3)
class(q3$Ranking)
q3$Ranking <- as.numeric(as.character(q3$Ranking))
q3 <- arrange(q3,desc(Ranking))
View(q3)
View(q3)
with(q3[q3$Income.Group=="High income: OECD",],mean(Ranking))
with(q3[q3$Income.Group=="High income: nonOECD",],mean(Ranking))
q3$Range <- cut(q3$Ranking,breaks = 5)
levels(q3$Range)
q3$Range <- cut(q3$Ranking,breaks = 5,labels = FALSE)
levels(q3$Range)
head(q3$Range)
q3$Range <- cut(q3$Ranking,breaks = 5,labels = c("1","2","3","4","5"))
levels(q3$Range)
View(q3)
with(q3,table(Income.Group,Range))
View(q3)
View(q3)
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
View(students)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
View(res)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit()
View(students3)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread( test, grade) %>%
print
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sat
submit()
submit()
if(!file.exists("./data")){dir.create("./data")}
fileurl <- "http://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileurl,destfile = "./data/cameras.csv",method = "curl")
library(curl)
download.file(fileurl,destfile = "./data/cameras.csv",method = "curl")
library(devtools)
download.file(fileurl,destfile = "./data/cameras.csv",method = "curl")
fileurl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileurl,destfile = "./data/cameras.csv",method = "curl")
download.file(fileurl,destfile = "./data/cameras.csv")
cameraData <- read.csv("./data/cameras.csv")
View(cameraData)
names(cameraData)
tolower(names(cameraData))
splitNames = strsplit(names(cameraData),"\\.")
splitNames[[5]]
splitNames[[6]]
mylist <- list(letters=c("A","b","c"),numbers=1:3,matrix=(1:25,ncol = 5))
mylist <- list(letters=c("A","b","c"),numbers=1:3,matrix=(1:25,ncol = 5))
mylist <- list(letters=c("A","b","c"),numbers=1:3,matrix(1:25, ncol = 5))
head(mylist)
mylist[1]
mylist$letters
mylist[[1]]
cameraData <- read.csv("./data/cameras.csv")
splitNames = strsplit(names(cameraData),"\\.")
splitNames[[5]]
splitNames[[6]]
mylist <- list(letters=c("A","b","c"),numbers=1:3,matrix(1:25, ncol = 5))
head(mylist)
splitNames[[6]][1]
firstElement <- function(x){x[1]}
sapply(splitNames,firstElement)
reviews <- read.csv("./data/reviews.csv")
solutions <- read.csv("./data/solutions.csv")
head(reviews,2)
head(solutions,2)
names(reviews)
sub("_","",names(reviews))
testName <- "this_is_a_test"
sub("_","",testName)
gsub("_","",testName)
grep("Alameda",cameraData$intersection)
table(grepl("Alameda",cameraData$intersection))
cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection)]
cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
grep("Alameda",cameraData$intersection,value = TRUE)
grep("JeffStreet",cameraData$intersection)
length(grep("JeffStreet",cameraData$intersection))
library(stringr)
nchar("Jeffrey Leek")
substr("Jeffrey Leek",1,7)
paste("Jeffrey","Leek")
paste0("Jeffrey","Leek")
str_trim("Jeff       ")
d1 = date()
d1
class(d1)
d2= Sys.Date()
class(d2)
d2
format(d2,"%a %b %d")
d1 = date()
d1
class(d1)
d2= Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
format(d2,"%A %b %d")
format(d2,"%a %B %d")
format(d2,"%a %b %d")
x= c("1jan1960","2jan1960","31mar1960","30jul1960")
z= as.Date(x,"%d%b%Y")
z
format(d2,"%a %b %d")
d1 = date()
d1
class(d1)
d2= Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
x= c("1jan1960","2jan1960","31mar1960","30jul1960")
z= as.Date(x,"%d%b%Y")
d2= Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
x= c("1jan1960","2jan1960","31mar1960","30jul1960")
z= as.Date(x,"%d%b%Y")
z
z[1]-z[2]
as.numeric(z[1]-z[2])
weekdays(d2)
months(d2)
julian(d2)
library(lubridate)
ymd("20140108")
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-03 10:15:03")
ymd_hms("2011-08-03 10:15:03", tz="Pacific/Auckland")
?Sys.timezone
x = dmy(x= c("1jan1960","2jan1960","31mar1960","30jul1960"))
wday(x[1])
wday(x[1],label = TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url,destfile = "./data/q1.microdata.csv")
q1 <- read.csv("./data/q1.microdata.csv")
strsplit(q1$WGTP)
View(q1)
head(q1$WGTP)
match <- grepl("wgtp",names(q1))
x <- names(q1)[match]
strsplit(names(q1),"wgtp")
strsplit(names(q1),"wgtp")[123]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile = "./data/q2.gdp.csv")
q2 <- read.csv("./data/q2.gdp.csv")
View(q2)
q2 <- read.csv("./data/q2.gdp.csv",skip=3,na.strings=c("",".."))
names(q2)[1] <- "Country"
q2 <- q2[!is.na(q2$Country),c("Country","Ranking","Economy","US.dollars.")]
View(q2)
q2 <- q2[!is.na(q2$Country) & !is.na(q2$Ranking),c("Country","Ranking","Economy","US.dollars.")]
View(q2)
library(dplyr)
q2 %>%
mutate(US.dollars.=sub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.)) %>%
mean(US.dollars.)
q2 %>%
mutate(US.dollars.=sub(",","",US.dollars.))
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.)) %>%
mean(US.dollars.)
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.))
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.)) %>%
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.))
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.))
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.)) ->y
class(y$US.dollars.)
mean(y$US.dollars.)
q2 %>%
mutate(US.dollars.=gsub(",","",US.dollars.)) %>%
mutate(US.dollars.=as.numeric(US.dollars.)) %>%
summarize(mean(US.dollars.))
grep("^United",q2$Country)
View(q2)
grep("^United",q2$Economy)
length(grep("^United",q2$Economy))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url,destfile = "./data/edu.csv")
edu <- read.csv("./data/edu.csv")
View(edu)
mergedata <- merge(q2,edu,by.x = "Country",by.y = "CountryCode")
View(mergedata)
grep("[Ff]iscal year end:June",mergedata$Special.Notes)
grep("[Ff]iscal year end",mergedata$Special.Notes)
sub <- mergedata[grep("[Ff]iscal year end",mergedata$Special.Notes),]
grep("June",sub$Special.Notes)
sum(grep("June",sub$Special.Notes))
sum(grepl("June",sub$Special.Notes))
install.packages("quantmod")
unzip("./data/Project.zip",files = "./data/Project")
dir.create("./data/Project")
unzip("./data/Project.zip",files = "./data/Project")
unzip("./data/project.zip",exdir = "./data/Project")
unzip("./data/project.zip",exdir = "./data/")
unzip("./data/project.zip",exdir = "./data")
test.x <- read.table("./data/UCI HAR Dataset/test/X_test.txt",sep = "\t")
test.x <- read.table("./data/UCI HAR Dataset/test/X_test.txt")
View(test.x)
test.y <- read.table("./data/UCI HAR Dataset/test/y_test.txt")
View(test.y)
test.subject <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
View(test.subject)
View(test.x)
train.x <- read.table("./data/UCI HAR Dataset/train/X_train.txt")
train.y <- read.table("./data/UCI HAR Dataset/train/y_train.txt")
train.subject <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
testD <- cbind(test.x,test.y,test.subject)
trainD <- cbind(train.x,train.y,train.subject)
testD$cat <- "test"
trainD$cat <- "train"
fullD <- rbind(testD,trainD)
featureName <- read.table("./data/UCI HAR Dataset/features.txt")
View(featureName)
featureName <- read.table("./data/UCI HAR Dataset/features.txt")[,2]
featureName <- read.table("./data/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE)[,2]
Index <- grep("mean\\(\\)|std\\(\\)",featureName)
grep(("mean\\(\\)|std\\(\\)"), featureName)
fullD <- fullD[,c(Index,562:564)]
names(fullD)[1:(ncol(fullD)-1)]<-c(featureName[Index],"activity","subject")
View(fullD)
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
View(activities)
class(activities)
class(activities$V2)
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt",stringsAsFactors = FALSE)
class(fullD$activity)
fullD$activity <- factor(fullD$activity, levels = activities[,1],labels = activities[,2])
head(fullD$activity)
as.character(fullD$activity)
fullD$activity <- as.character(fullD$activity)
library(dplyr)
names(fullD)
names <- names(fullD)
names <- gsub("\\()","",names)
names
names <- gsub("^t","Time",names)
names
names <- gsub("^f","Frequency",names)
names
names <- names(fullD)
replacement <- c("","Time","Frequency","Mean","Std")
for( i in c("\\()","^t","^f","-mean","-std")){
names <- gsub(i,replacement[i],names)
}
names <- names(fullD)
replacement <- c("","Time","Frequency","Mean","Std")
figure <- c("\\()","^t","^f","-mean","-std")
pattern <- c("\\()","^t","^f","-mean","-std")
replacement <- c("","Time","Frequency","Mean","Std")
for( i in 1:5){
names <- gsub(pattern[i],replacement[i],names)
}
figure
names
fullD %>%
group_by(activity,subject) %>%
summarise_each(funs(mean)) ->finalD
fullD %>%
group_by(activity,subject) %>%
summarise_all(funs(mean)) ->finalD
warnings()
fullD <- rbind(testD,trainD)
featureName <- read.table("./data/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE)[,2]
#Step2:  extract mean()|std() of each measurements
Index <- grep("mean\\(\\)|std\\(\\)",featureName)
fullD <- fullD[,c(Index,562:564)]
names(fullD)[1:(ncol(fullD)-1)]<-c(featureName[Index],"activity","subject")
# 3 -----------------------------------------------------------------------
#Uses descriptive activity names to name the activities in the data set
#Step1: load activity data
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt",stringsAsFactors = FALSE)
#Step2: replace 1 to 6 with activity names
fullD$activity <- factor(fullD$activity, levels = activities[,1],labels = activities[,2])
fullD$activity <- as.character(fullD$activity)
# 4 -----------------------------------------------------------------------
#Appropriately labels the data set with descriptive variable names.
names <- names(fullD)
pattern <- c("\\()","^t","^f","-mean","-std")
replacement <- c("","Time","Frequency","Mean","Std")
for( i in 1:5){
names <- gsub(pattern[i],replacement[i],names)
}
# 5 -----------------------------------------------------------------------
#From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
fullD %>%
group_by(activity,subject) %>%
summarise_all(funs(mean)) ->finalD
warnings()
testD <- cbind(test.x,test.y,test.subject)
trainD <- cbind(train.x,train.y,train.subject)
fullD <- rbind(testD,trainD)
fullD <- rbind(testD,trainD)
# 2 -----------------------------------------------------------------------
#Extracts only the measurements on the mean and standard deviation for each measurement.
#Step1: Load data
featureName <- read.table("./data/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE)[,2]
#Step2:  extract mean()|std() of each measurements
Index <- grep("mean\\(\\)|std\\(\\)",featureName)
fullD <- fullD[,c(Index,562:564)]
names(fullD)[1:(ncol(fullD)-1)]<-c(featureName[Index],"activity","subject")
# 3 -----------------------------------------------------------------------
#Uses descriptive activity names to name the activities in the data set
#Step1: load activity data
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt",stringsAsFactors = FALSE)
#Step2: replace 1 to 6 with activity names
fullD$activity <- factor(fullD$activity, levels = activities[,1],labels = activities[,2])
fullD$activity <- as.character(fullD$activity)
# 4 -----------------------------------------------------------------------
#Appropriately labels the data set with descriptive variable names.
names <- names(fullD)
pattern <- c("\\()","^t","^f","-mean","-std")
replacement <- c("","Time","Frequency","Mean","Std")
for( i in 1:5){
names <- gsub(pattern[i],replacement[i],names)
}
# 5 -----------------------------------------------------------------------
#From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
fullD %>%
group_by(activity,subject) %>%
summarise_all(funs(mean)) ->finalD
names(fullD) <- names
fullD %>%
group_by(activity,subject) %>%
summarise_all(funs(mean)) ->finalD
test.x <- read.table("./data/UCI HAR Dataset/test/X_test.txt")
test.y <- read.table("./data/UCI HAR Dataset/test/y_test.txt")
test.subject <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
train.x <- read.table("./data/UCI HAR Dataset/train/X_train.txt")
train.y <- read.table("./data/UCI HAR Dataset/train/y_train.txt")
train.subject <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
#Step4: Merge data
testD <- cbind(test.x,test.y,test.subject)
trainD <- cbind(train.x,train.y,train.subject)
fullD <- rbind(testD,trainD)
# 2 -----------------------------------------------------------------------
#Extracts only the measurements on the mean and standard deviation for each measurement.
#Step1: Load data
featureName <- read.table("./data/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE)[,2]
#Step2:  extract mean()|std() of each measurements
Index <- grep("mean\\(\\)|std\\(\\)",featureName)
fullD <- fullD[,c(Index,562:564)]
names(fullD)[1:(ncol(fullD)-1)]<-c(featureName[Index],"activity","subject")
# 3 -----------------------------------------------------------------------
#Uses descriptive activity names to name the activities in the data set
#Step1: load activity data
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt",stringsAsFactors = FALSE)
#Step2: replace 1 to 6 with activity names
fullD$activity <- factor(fullD$activity, levels = activities[,1],labels = activities[,2])
fullD$activity <- as.character(fullD$activity)
# 4 -----------------------------------------------------------------------
#Appropriately labels the data set with descriptive variable names.
names <- names(fullD)
pattern <- c("\\()","^t","^f","-mean","-std")
replacement <- c("","Time","Frequency","Mean","Std")
for( i in 1:5){
names <- gsub(pattern[i],replacement[i],names)
}
names(fullD) <- names
# 5 -----------------------------------------------------------------------
#From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
fullD %>%
group_by(activity,subject) %>%
summarise_all(funs(mean)) ->finalD
testD <- cbind(test.x,test.y,test.subject)
trainD <- cbind(train.x,train.y,train.subject)
fullD <- rbind(testD,trainD)
featureName <- read.table("./data/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE)[,2]
Index <- grep("mean\\(\\)|std\\(\\)",featureName)
fullD <- fullD[,c(Index,562:563)]
names(fullD)[1:(ncol(fullD)-1)]<-c(featureName[Index],"activity","subject")
names(fullD)[1:(ncol(fullD))]<-c(featureName[Index],"activity","subject")
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt",stringsAsFactors = FALSE)
fullD$activity <- factor(fullD$activity, levels = activities[,1],labels = activities[,2])
fullD$activity <- as.character(fullD$activity)
names <- names(fullD)
pattern <- c("\\()","^t","^f","-mean","-std")
replacement <- c("","Time","Frequency","Mean","Std")
for( i in 1:5){
names <- gsub(pattern[i],replacement[i],names)
}
names(fullD) <- names
fullD %>%
group_by(activity,subject) %>%
summarise_all(funs(mean)) ->finalD
View(finalD)
write.table(finalD,"./data/project_result.txt",row.names = FALSE)
